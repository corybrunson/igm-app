shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
source("app/server.R")
source("app/ui.R")
shinyApp(ui = ui, server = server)
source("app/ui_presentation.R")
shinyApp(ui = ui, server = server)
source("app/ui_presentation.R")
shinyApp(ui = ui, server = server)
source("app/ui_presentation.R")
shinyApp(ui = ui, server = server)
source("app/ui_presentation.R")
# Run app!
shinyApp(ui = ui, server = server)
source("app/ui_presentation.R")
# Run app!
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
source("app/server.R")
source("app/ui.R")
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
#source("app/ui.R")
source("app/ui_presentation.R")
# Run app!
shinyApp(ui = ui, server = server)
source("app/server.R")
source("app/ui_presentation.R")
shinyApp(ui = ui, server = server)
source("app/server.R")
source("app/ui_presentation.R")
shinyApp(ui = ui, server = server)
dat <- allDat
conf_var <- "confidence"
form <- paste(conf_var, "~ factor(vote)")
boxplot(as.formula(form), data = allDat, outline = FALSE,
xlab = "Vote",
ylab = if (conf_var == "confidence") "Confidence" else
"Logit-Confidence")
points(x = jitter(as.numeric(factor(allDat$vote))),
y = jitter(allDat[[conf_var]]),
pch = 16, cex = .33, col = rgb(0, 0, 0, .33))
levels(dat$vote)
head(dat)
mean_sd <- summarise(
group_by(dat, factor(vote)),
mean = mean(conf_var, na.rm = TRUE),
sd = sd(conf_var, na.rm = TRUE)
)
unique(warnings())
dim(mean_sd)
mean_sd
dat$vote[1:5]
levels(dat$vote)
mean_sd <- summarise(
group_by(dat, vote),
mean = mean(conf_var, na.rm = TRUE),
sd = sd(conf_var, na.rm = TRUE)
)
mean_sd
mean_sd <- mean_sd[levels(dat$vote), ]
rownames(mean_sd) <- mean_sd$vote
mean_sd$vote
rownames(mean_sd) <- as.character(mean_sd$vote)
sort(mean_sd$vote)
length(sort(mean_sd$vote))
order(mean_sd$vote)
?order
mean_sd[order(mean_sd$vote, na.last = NA), ]
mean_sd <- summarise(
group_by(dat, vote),
mean = mean(confidence, na.rm = TRUE),
sd = sd(confidence, na.rm = TRUE)
)
mean_sd <- mean_sd[order(mean_sd$vote, na.last = NA), ]
mean_sd
paste0(round(mean_sd$mean, 1), " (",
round(mean_sd$sd, 1), ")")
?round
paste0(signif(mean_sd$mean, 1), " (",
signif(mean_sd$sd, 1), ")")
paste0(signif(mean_sd$mean, 2), " (",
signif(mean_sd$sd, 2), ")")
paste0(round(mean_sd$mean, 1), " (",
round(mean_sd$sd, 1), ")")
paste0(sprintf("%.1f", round(mean_sd$mean, 1)), " (",
sprintf("%.1f", round(mean_sd$sd, 1)), ")")
?summarise
mean_sd <- summarise(
group_by(dat, vote),
mean = as.formula(mean(confidence, na.rm = TRUE)),
sd = sd(confidence, na.rm = TRUE)
)
mean_sd <- mean_sd[order(mean_sd$vote, na.last = NA), ]
mean_sd <- summarise(
group_by(dat, vote),
mean = as.formula("mean(confidence, na.rm = TRUE)"),
sd = sd(confidence, na.rm = TRUE)
)
mean_sd <- mean_sd[order(mean_sd$vote, na.last = NA), ]
mean_sd <- summarise(
group_by(dat, vote),
mean = interp(mean(conf_var, na.rm = TRUE),
conf_var = as.name(conf_var)),
sd = sd(confidence, na.rm = TRUE)
)
mtcars
dots = sapply(y, . %>% {as.formula(paste0("~", .))})
dots = sapply(y, . %>% {as.formula(paste0('~', .))})
mean_sd <- summarise(
group_by(dat, vote),
mean = as.name(conf_var),
sd = sd(confidence, na.rm = TRUE)
)
as.name(conf_var)
mean_sd <- summarise(
group_by(dat, vote),
mean = mean(as.name(conf_var), na.rm = TRUE),
sd = sd(confidence, na.rm = TRUE)
)
mean_sd
"conf"
dat <- allDat
dat$conf_var <- if (input$conf.var == "Raw") {
dat$confidence
} else {
dat$logit.conf
}
dat$conf_var <- dat$confidence
# Confidence distribution across vote options
boxplot(conf_var ~ factor(vote), data = allDat, outline = FALSE,
xlab = "Vote",
ylab = if (input$conf.var == "Raw") "Confidence" else
"Logit-Confidence")
boxplot(conf_var ~ factor(vote), data = dat, outline = FALSE,
xlab = "Vote",
ylab = if (input$conf.var == "Raw") "Confidence" else
"Logit-Confidence")
boxplot(conf_var ~ factor(vote), data = dat, outline = FALSE,
xlab = "Vote",ylab="Confidence")
points(x = jitter(as.numeric(factor(dat$vote))),
y = jitter(dat$conf_var),
pch = 16, cex = .33, col = rgb(0, 0, 0, .33))
mean_sd <- summarise(
group_by(dat, vote),
mean = mean(conf_var, na.rm = TRUE),
sd = sd(conf_var, na.rm = TRUE)
)
mean_sd <- mean_sd[order(mean_sd$vote, na.last = NA), ]
means_sds <- paste0(sprintf("%.1f", round(mean_sd$mean, 1)), " (",
sprintf("%.1f", round(mean_sd$sd, 1)), ")")
means_sds
axis(side = 3, at = 1:5, tck = 0, labels = means_sds)
source("app/server.R")
shinyApp(ui = ui, server = server)
source("app/server.R")
shinyApp(ui = ui, server = server)
source("app/server.R")
shinyApp(ui = ui, server = server)
source("app/server.R")
source("app/ui.R")
shinyApp(ui = ui, server = server)
?mtext
source("app/server.R")
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
source("app/ui.R")
shinyApp(ui = ui, server = server)
consensus
agree
source("app/server.R")
source("app/ui.R")
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
unique(allDat$agree)
unique(allDat$agree + allDat$strength)
unique(allDat$strength)
unique(allDat$strong)
is.numeric(unique(allDat$strong))
unique(allDat$agree + allDat$strong)
unique(allDat$agree * allDat$strong)
unique(allDat$agree + allDat$agree * allDat$strong)
unique(allDat$agree * (1 + 0 * allDat$strong))
unique(allDat$agree * (1 + 1 * allDat$strong))
source("app/server.R")
shinyApp(ui = ui, server = server)
source("app/server.R")
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
# Source server
source("app/server.R")
# Source user interface
# http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
source("app/server.R")
source("app/ui.R")
shinyApp(ui = ui, server = server)
?renderDataTable
?rowCallback
??rowCallback
# Source server
source("app/server.R")
# Source user interface
# TeX to html: http://hutchinson.belmont.ma.us/tth/manual/sec3.html
source("app/ui.R")
# Run app!
shinyApp(ui = ui, server = server)
